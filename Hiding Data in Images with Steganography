# Javascript-For-Images
The following codes hide data from one image into another image with steganography:
  Assume we will hide one image inside another image by hiding information inside half of each pixel. 
  If the red color of a pixel in image 1 is 212 (written as 8 binary bits that is 11010100), 
  and the red part of the image 2 we want to hide is 168 (in 8 bits that is 10101000). 
  Then the 8 bits for this red color after we have hidden image 2 in image 1 by hiding it in half the pixel data is:
  11011010.
The exercise comes from Programming and Web for Beginners on Coursera.


// crop the image
function crop(image, width, height) {
    var newimage = new SimpleImage(width, height);
    var xcenter = image.getWidth()/2;
    var ycenter = image.getHeight()/2;
    var leftbound = xcenter - width/2;
    var rightbound = xcenter + width/2;
    var bottombound = ycenter - height/2;
    var topbound = ycenter + height/2;
    for (var pixel of image.values()) {
        var x = pixel.getX();
        var y = pixel.getY();
        if (x <= rightbound && x > leftbound && y > bottombound && y <= topbound) {
            newimage.setPixel(x-leftbound-1, y-bottombound-1, pixel);
        }
    }
    print(newimage);
}

// Get the first 4 bites of RGB in image1 that will store the data.
function changepixel(value, rule) {
    var newvalue = Math.floor(value/rule)*rule;
    return newvalue;
}

function first(image, rule) {
    for (var pixel of image.values()) {
        pixel.setRed(changepixel(pixel.getRed(), rule));
        pixel.setGreen(changepixel(pixel.getGreen(), rule));
        pixel.setBlue(changepixel(pixel.getBlue(), rule));
    }
    return image;
}

// Get the first 4 bites of RGB in image1 that data are extracted, and put them into second half of 8 bites of image2.
function second(image, rule) {
    for (var pixel of image.values()) {
    pixel.setRed(Math.floor(pixel.getRed()/rule));
    pixel.setGreen(Math.floor(pixel.getGreen()/rule));
    pixel.setBlue(Math.floor(pixel.getBlue()/rule));
    }
    return image;
}

// Combine 4 bites from image1 and 4 bites from image2.
function combine(image1, image2) {
    var newimage = new SimpleImage(image1.getWidth(), image1.getHeight());
    for (var pixel of image1.values()) {
        var x = pixel.getX();
        var y = pixel.getY();
        var px = image2.getPixel(x, y);
        var pxnew = newimage.getPixel(x, y);
        if ((pixel.getRed()+px.getRed()) < 255) {
            pxnew.setRed(pixel.getRed()+px.getRed());
        }
        else {
            print("Combined Red value too large!");
        }
        if ((pixel.getGreen()+px.getGreen()) < 255) {
            pxnew.setGreen(pixel.getGreen()+px.getGreen());
        }
        else {
            print("Combined Green value too large!");
        }
        if ((pixel.getBlue()+px.getBlue()) < 255) {
            pxnew.setBlue(pixel.getBlue()+px.getBlue());
        }
        else {
            print("Combined Blue value too large!");
        }
    }
    return newimage;
}

var start = new SimpleImage("duvall.jpg");
var hide = new SimpleImage("lion.jpg");
print("Size of Start is:");
print(start.getWidth(),start.getHeight());
print("Size of Hide is:");
print(hide.getWidth(),hide.getHeight());

var newimage = combine(first(start, 16), second(hide, 16));
print(newimage);
