# Javascript-For-Images
The following codes extract image from steganography.
  Decode method: Work an example with one pixel. Suppose the red value of a pixel is 203. 
  Convert that number to binary. 203 is 128 + 64 + 8 + 2 + 1 = 11001011 in binary. 
  Move the lower four bits, 1011, to the upper four bits and clear out the lower four bits, to 10110000. 
  Transform 10110000 into decimal number as the value for that pixel.
The exercise comes from Programming and Web for Beginners on Coursera.

// crop the image
function crop(image, width, height) {
    var newimage = new SimpleImage(width, height);
    var xcenter = image.getWidth()/2;
    var ycenter = image.getHeight()/2;
    var leftbound = xcenter - width/2;
    var rightbound = xcenter + width/2;
    var bottombound = ycenter - height/2;
    var topbound = ycenter + height/2;
    for (var pixel of image.values()) {
        var x = pixel.getX();
        var y = pixel.getY();
        if (x <= rightbound && x > leftbound && y > bottombound && y <= topbound) {
            newimage.setPixel(x-leftbound-1, y-bottombound-1, pixel);
        }
    }
    return newimage;
}

// Change decimal to binary number.
function decimaltobinary(number) {
    if (number!==0) {
        var binary = "";
        var remainder = 0;
        var dividend = 1;
        while (dividend !== 0) {
            remainder = number % 2;
            remainder = remainder.toString();
            dividend = parseInt(number/2);
            number = dividend;
            binary = binary.concat(remainder);
        }
        binary = binary.split("").reverse().join("");
        if (binary.length<8) {
            binary = "0".repeat(8-binary.length).concat(binary);
        }
        return binary;
    }
    else {
        return "00000000";
    }
    
}


// inverse binary series.
function transfer(string, n) {
    var str = string.substr(-n,n);
    var str1 = str.concat("0".repeat(8-n));
    return str1;
}

// change binary series into decimal.
function binarytodecimal(string) {
    var decimal = 0;
    for (i = 1; i <=8; i++) {
        var num = Number(string.substr(i-1,1));
        decimal = decimal + num * Math.pow(2, 8-i);
    }
    return decimal;
}

function combine(string1, string2, n) {
    var str = string1.substr(0, 8-n).concat(string2.substr(0, n));
    return str;
}


// or: another simple method without decimaltobinary(), transfer(), binarytodecimal()

//function extract(num) {
//    num = (num - ( Math.floor(num /16) * 16)) * 16;
//    return num;
//}

var n = 2;
var start = new SimpleImage("duvall.jpg");
var hide = new SimpleImage("lion.jpg");
start = crop(start, 200, 300);
hide = crop(hide, 200, 300);

print(start);
print(hide);

var newimage = new SimpleImage(200, 300);
for (var px of start.values()) {
    var x = px.getX();
    var y = px.getY();
    var px2 = hide.getPixel(x, y);
    var px3 = newimage.getPixel(x, y);
    px3.setRed(binarytodecimal(
        combine(decimaltobinary(px.getRed()), decimaltobinary(px2.getRed()), n)
        ))
    px3.setGreen(binarytodecimal(
        combine(decimaltobinary(px.getGreen()), decimaltobinary(px2.getGreen()), n)
        ))
    px3.setBlue(binarytodecimal(
        combine(decimaltobinary(px.getBlue()), decimaltobinary(px2.getBlue()), n)
        ))
}

print(newimage);

for (var px of newimage.values()) {
    px.setRed(binarytodecimal(transfer(decimaltobinary(px.getRed()), n)));
    px.setBlue(binarytodecimal(transfer(decimaltobinary(px.getBlue()), n)));
    px.setGreen(binarytodecimal(transfer(decimaltobinary(px.getGreen()), n)));
}
print(newimage);
